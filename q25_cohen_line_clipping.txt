# include <stdio.h>
# include <conio.h>
# include <graphics.h>
# include <math.h>

# define INSIDE 0
# define LEFT 1
# define RIGHT 2
# define BOTTOM 4
# define TOP 8
# define xmax 400
# define ymax 300
# define xmin 100
# define ymin 100

int calculateCode(int x, int y){

    int code = INSIDE;

    if(x < xmin){
        code |= LEFT;
    }
    else if (x > xmax){
        code |= RIGHT;
    }
    else if(y < ymin){
        code |= BOTTOM;
    }
    else if(y > ymax){
        code |= TOP;
    }
    return code;

}

void cohenSutherland(int x1, int y1, int x2, int y2){

    int code1, code2, code;
    int x, y;

    code1 = calculateCode(x1, y1);
    code2 = calculateCode(x2, y2);
    while (true)
    {
        if(!(code1 | code2)){
            line(x1, y1, x2, y2);
        }
        else if(code1 & code2){
            break;
        }
        else {

            code = code1 ? code1 : code2;

            if(code & TOP){
                x = x1 + (x2 - x1) * (ymax - y1)/(y2 - y1);
                y = ymax;
            }
            else if (code & BOTTOM)
            {
                x = x1 + (x2 - x1) * (ymin - y1)/(y2 - y1);
                y = ymin;
            }
            else if(code & RIGHT)
            {
                y = y1 + (y2 - y1) *(xmax - x1)/(x2 - x1);
                x = xmax;
            }
            else if(code & LEFT)
            {
                y = y1 + (y2 - y1) *(xmin - x1)/(x2 - x1);
                x = xmin;
            }

            if(code == code1){
                x1 = x;
                y1 = y;
                code1 = calculateCode(x1, y1);
            } else {
                x2 = x;
                y2 = y;
                code2 = calculateCode(x2, y2);
            }
            
        }
    }
    
}

int main(){

    int x1 = 50, y1 = 50, x2 = 500, y2 = 400;
    int gd = DETECT, gm;

    initgraph(&gd, &gm, (char*)"");

    rectangle(xmin, ymin, xmax, ymax);
    delay(1000);

    if((calculateCode(x1, y1) == INSIDE) || calculateCode(x2, y2) == INSIDE){

        line(x1, y1, x2, y2);
    }

    cohenSutherland(x1, y1, x2, y2);


    getch();
    closegraph();
    return 0;
}