#include <graphics.h>
#include <math.h>

// Function to draw a line using Bresenham's line drawing algorithm
void drawLineBresenham(int x1, int y1, int x2, int y2) {
    int dx = x2 - x1;
    int dy = y2 - y1;
    int x = x1, y = y1;

    int sx = dx > 0 ? 1 : -1;
    int sy = dy > 0 ? 1 : -1;

    dx = abs(dx);
    dy = abs(dy);

    if (dx > dy) {
        int p = 2 * dy - dx;
        while (x != x2) {
            putpixel(x, y, WHITE);
            x += sx;
            if (p < 0)
                p += 2 * dy;
            else {
                y += sy;
                p += 2 * (dy - dx);
            }
        }
    } else {
        int p = 2 * dx - dy;
        while (y != y2) {
            putpixel(x, y, WHITE);
            y += sy;
            if (p < 0)
                p += 2 * dx;
            else {
                x += sx;
                p += 2 * (dx - dy);
            }
        }
    }
    putpixel(x, y, WHITE);
}

int main() {
    // Initialize the graphics mode and driver
    int gd = DETECT, gm;
    initgraph(&gd, &gm, "C:\\TDM-GCC-64\\lib\\");  // Adjust the path according to your setup

    // Set the color of the line
    setcolor(WHITE);

    // Draw a line from (100, 100) to (300, 200) using Bresenham's line drawing algorithm
    drawLineBresenham(100, 100, 300, 200);

    // Wait for the user to press a key
    getch();

    // Close the graphics mode and clean up
    closegraph();
    return 0;
}
